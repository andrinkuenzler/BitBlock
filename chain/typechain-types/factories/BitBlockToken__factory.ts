/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BitBlockToken, BitBlockTokenInterface } from "../BitBlockToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "approveAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "createToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventContract",
    outputs: [
      {
        internalType: "contract EventContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeMul",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeSub",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract EventContract",
        name: "contract_",
        type: "address",
      },
    ],
    name: "setEventContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600381526020017f4242540000000000000000000000000000000000000000000000000000000000815250600090816200004a91906200033b565b506040518060400160405280600f81526020017f426974426c6f636b205469636b65740000000000000000000000000000000000815250600190816200009191906200033b565b5060028060006101000a81548160ff021916908360ff160217905550348015620000ba57600080fd5b5062000422565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014357607f821691505b602082108103620001595762000158620000fb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000184565b620001cf868362000184565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200021c620002166200021084620001e7565b620001f1565b620001e7565b9050919050565b6000819050919050565b6200023883620001fb565b62000250620002478262000223565b84845462000191565b825550505050565b600090565b6200026762000258565b620002748184846200022d565b505050565b5b818110156200029c57620002906000826200025d565b6001810190506200027a565b5050565b601f821115620002eb57620002b5816200015f565b620002c08462000174565b81016020851015620002d0578190505b620002e8620002df8562000174565b83018262000279565b50505b505050565b600082821c905092915050565b60006200031060001984600802620002f0565b1980831691505092915050565b60006200032b8383620002fd565b9150826002028217905092915050565b6200034682620000c1565b67ffffffffffffffff811115620003625762000361620000cc565b5b6200036e82546200012a565b6200037b828285620002a0565b600060209050601f831160018114620003b357600084156200039e578287015190505b620003aa85826200031d565b8655506200041a565b601f198416620003c3866200015f565b60005b82811015620003ed57848901518255600182019150602085019450602081019050620003c6565b868310156200040d578489015162000409601f891682620002fd565b8355505b6001600288020188555050505b505050505050565b6117fb80620004326000396000f3fe60806040526004361061010d5760003560e01c806395d89b4111610095578063cae9ca5111610064578063cae9ca51146103b0578063d05c78da146103ed578063dd62ed3e1461042a578063e274fd2414610467578063e6cb90131461049257610114565b806395d89b41146102ce578063a293d1e8146102f9578063a9059cbb14610336578063b5931f7c1461037357610114565b80632d571cc4116100dc5780632d571cc4146101e9578063313ce567146102125780633eaaf86b1461023d578063656f0f0f1461026857806370a082311461029157610114565b806306fdde0314610119578063095ea7b31461014457806318160ddd1461018157806323b872dd146101ac57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e6104cf565b60405161013b9190611013565b60405180910390f35b34801561015057600080fd5b5061016b600480360381019061016691906110dd565b61055d565b6040516101789190611138565b60405180910390f35b34801561018d57600080fd5b5061019661064f565b6040516101a39190611162565b60405180910390f35b3480156101b857600080fd5b506101d360048036038101906101ce919061117d565b6106a3565b6040516101e09190611138565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b91906111d0565b610933565b005b34801561021e57600080fd5b50610227610a15565b6040516102349190611219565b60405180910390f35b34801561024957600080fd5b50610252610a28565b60405161025f9190611162565b60405180910390f35b34801561027457600080fd5b5061028f600480360381019061028a9190611284565b610a2e565b005b34801561029d57600080fd5b506102b860048036038101906102b391906112b1565b610a72565b6040516102c59190611162565b60405180910390f35b3480156102da57600080fd5b506102e3610abb565b6040516102f09190611013565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b91906112de565b610b49565b60405161032d9190611162565b60405180910390f35b34801561034257600080fd5b5061035d600480360381019061035891906110dd565b610b6c565b60405161036a9190611138565b60405180910390f35b34801561037f57600080fd5b5061039a600480360381019061039591906112de565b610cf5565b6040516103a79190611162565b60405180910390f35b3480156103bc57600080fd5b506103d760048036038101906103d29190611453565b610d17565b6040516103e49190611138565b60405180910390f35b3480156103f957600080fd5b50610414600480360381019061040f91906112de565b610e7b565b6040516104219190611162565b60405180910390f35b34801561043657600080fd5b50610451600480360381019061044c91906114c2565b610eb3565b60405161045e9190611162565b60405180910390f35b34801561047357600080fd5b5061047c610f3a565b6040516104899190611561565b60405180910390f35b34801561049e57600080fd5b506104b960048036038101906104b491906112de565b610f60565b6040516104c69190611162565b60405180910390f35b600180546104dc906115ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610508906115ab565b80156105555780601f1061052a57610100808354040283529160200191610555565b820191906000526020600020905b81548152906001019060200180831161053857829003601f168201915b505050505081565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161063d9190611162565b60405180910390a36001905092915050565b6000600560008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460035461069e919061160b565b905090565b60006106ee600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b49565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107b7600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b49565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610880600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610f60565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109209190611162565b60405180910390a3600190509392505050565b8060036000828254610945919061163f565b92505081905550600354600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000733c44cdddb6a900fa2b585dd299e03d12fa4293bc90508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a099190611162565b60405180910390a35050565b600260009054906101000a900460ff1681565b60035481565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054610ac8906115ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610af4906115ab565b8015610b415780601f10610b1657610100808354040283529160200191610b41565b820191906000526020600020905b815481529060010190602001808311610b2457829003601f168201915b505050505081565b600082821115610b5857600080fd5b8183610b64919061160b565b905092915050565b6000610bb7600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b49565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c43600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610f60565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ce39190611162565b60405180910390a36001905092915050565b6000808211610d0357600080fd5b8183610d0f91906116a2565b905092915050565b600082600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610df79190611162565b60405180910390a38373ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338530866040518563ffffffff1660e01b8152600401610e3e9493929190611737565b600060405180830381600087803b158015610e5857600080fd5b505af1158015610e6c573d6000803e3d6000fd5b50505050600190509392505050565b60008183610e899190611783565b90506000831480610ea45750818382610ea291906116a2565b145b610ead57600080fd5b92915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008183610f6e919061163f565b905082811015610f7d57600080fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fbd578082015181840152602081019050610fa2565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fe582610f83565b610fef8185610f8e565b9350610fff818560208601610f9f565b61100881610fc9565b840191505092915050565b6000602082019050818103600083015261102d8184610fda565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061107482611049565b9050919050565b61108481611069565b811461108f57600080fd5b50565b6000813590506110a18161107b565b92915050565b6000819050919050565b6110ba816110a7565b81146110c557600080fd5b50565b6000813590506110d7816110b1565b92915050565b600080604083850312156110f4576110f361103f565b5b600061110285828601611092565b9250506020611113858286016110c8565b9150509250929050565b60008115159050919050565b6111328161111d565b82525050565b600060208201905061114d6000830184611129565b92915050565b61115c816110a7565b82525050565b60006020820190506111776000830184611153565b92915050565b6000806000606084860312156111965761119561103f565b5b60006111a486828701611092565b93505060206111b586828701611092565b92505060406111c6868287016110c8565b9150509250925092565b6000602082840312156111e6576111e561103f565b5b60006111f4848285016110c8565b91505092915050565b600060ff82169050919050565b611213816111fd565b82525050565b600060208201905061122e600083018461120a565b92915050565b600061123f82611049565b9050919050565b600061125182611234565b9050919050565b61126181611246565b811461126c57600080fd5b50565b60008135905061127e81611258565b92915050565b60006020828403121561129a5761129961103f565b5b60006112a88482850161126f565b91505092915050565b6000602082840312156112c7576112c661103f565b5b60006112d584828501611092565b91505092915050565b600080604083850312156112f5576112f461103f565b5b6000611303858286016110c8565b9250506020611314858286016110c8565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61136082610fc9565b810181811067ffffffffffffffff8211171561137f5761137e611328565b5b80604052505050565b6000611392611035565b905061139e8282611357565b919050565b600067ffffffffffffffff8211156113be576113bd611328565b5b6113c782610fc9565b9050602081019050919050565b82818337600083830152505050565b60006113f66113f1846113a3565b611388565b90508281526020810184848401111561141257611411611323565b5b61141d8482856113d4565b509392505050565b600082601f83011261143a5761143961131e565b5b813561144a8482602086016113e3565b91505092915050565b60008060006060848603121561146c5761146b61103f565b5b600061147a86828701611092565b935050602061148b868287016110c8565b925050604084013567ffffffffffffffff8111156114ac576114ab611044565b5b6114b886828701611425565b9150509250925092565b600080604083850312156114d9576114d861103f565b5b60006114e785828601611092565b92505060206114f885828601611092565b9150509250929050565b6000819050919050565b600061152761152261151d84611049565b611502565b611049565b9050919050565b60006115398261150c565b9050919050565b600061154b8261152e565b9050919050565b61155b81611540565b82525050565b60006020820190506115766000830184611552565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806115c357607f821691505b6020821081036115d6576115d561157c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611616826110a7565b9150611621836110a7565b9250828203905081811115611639576116386115dc565b5b92915050565b600061164a826110a7565b9150611655836110a7565b925082820190508082111561166d5761166c6115dc565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006116ad826110a7565b91506116b8836110a7565b9250826116c8576116c7611673565b5b828204905092915050565b6116dc81611069565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611709826116e2565b61171381856116ed565b9350611723818560208601610f9f565b61172c81610fc9565b840191505092915050565b600060808201905061174c60008301876116d3565b6117596020830186611153565b61176660408301856116d3565b818103606083015261177881846116fe565b905095945050505050565b600061178e826110a7565b9150611799836110a7565b92508282026117a7816110a7565b915082820484148315176117be576117bd6115dc565b5b509291505056fea2646970667358221220a18ddcb81eeede126f3db7e5f5f99f9c87d424ed812dfe165e7f7815053cd2ad64736f6c63430008110033";

type BitBlockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitBlockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitBlockToken__factory extends ContractFactory {
  constructor(...args: BitBlockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BitBlockToken> {
    return super.deploy(overrides || {}) as Promise<BitBlockToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BitBlockToken {
    return super.attach(address) as BitBlockToken;
  }
  override connect(signer: Signer): BitBlockToken__factory {
    return super.connect(signer) as BitBlockToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitBlockTokenInterface {
    return new utils.Interface(_abi) as BitBlockTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitBlockToken {
    return new Contract(address, _abi, signerOrProvider) as BitBlockToken;
  }
}
