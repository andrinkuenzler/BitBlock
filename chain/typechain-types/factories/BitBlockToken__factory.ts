/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BitBlockToken, BitBlockTokenInterface } from "../BitBlockToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "approveAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "contract BitBlockToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventContract",
    outputs: [
      {
        internalType: "contract EventContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeMul",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeSub",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract EventContract",
        name: "contract_",
        type: "address",
      },
    ],
    name: "setEventContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600381526020017f4242540000000000000000000000000000000000000000000000000000000000815250600090816200004a91906200033b565b506040518060400160405280600f81526020017f426974426c6f636b205469636b65740000000000000000000000000000000000815250600190816200009191906200033b565b5060028060006101000a81548160ff021916908360ff160217905550348015620000ba57600080fd5b5062000422565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014357607f821691505b602082108103620001595762000158620000fb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000184565b620001cf868362000184565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200021c620002166200021084620001e7565b620001f1565b620001e7565b9050919050565b6000819050919050565b6200023883620001fb565b62000250620002478262000223565b84845462000191565b825550505050565b600090565b6200026762000258565b620002748184846200022d565b505050565b5b818110156200029c57620002906000826200025d565b6001810190506200027a565b5050565b601f821115620002eb57620002b5816200015f565b620002c08462000174565b81016020851015620002d0578190505b620002e8620002df8562000174565b83018262000279565b50505b505050565b600082821c905092915050565b60006200031060001984600802620002f0565b1980831691505092915050565b60006200032b8383620002fd565b9150826002028217905092915050565b6200034682620000c1565b67ffffffffffffffff811115620003625762000361620000cc565b5b6200036e82546200012a565b6200037b828285620002a0565b600060209050601f831160018114620003b357600084156200039e578287015190505b620003aa85826200031d565b8655506200041a565b601f198416620003c3866200015f565b60005b82811015620003ed57848901518255600182019150602085019450602081019050620003c6565b868310156200040d578489015162000409601f891682620002fd565b8355505b6001600288020188555050505b505050505050565b61184980620004326000396000f3fe60806040526004361061010d5760003560e01c806395d89b4111610095578063cae9ca5111610064578063cae9ca51146103c4578063d05c78da14610401578063dd62ed3e1461043e578063e274fd241461047b578063e6cb9013146104a657610114565b806395d89b41146102e2578063a293d1e81461030d578063a9059cbb1461034a578063b5931f7c1461038757610114565b80632d571cc4116100dc5780632d571cc4146101e9578063313ce567146102265780633eaaf86b14610251578063656f0f0f1461027c57806370a08231146102a557610114565b806306fdde0314610119578063095ea7b31461014457806318160ddd1461018157806323b872dd146101ac57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e6104e3565b60405161013b9190611025565b60405180910390f35b34801561015057600080fd5b5061016b600480360381019061016691906110ef565b610571565b604051610178919061114a565b60405180910390f35b34801561018d57600080fd5b50610196610663565b6040516101a39190611174565b60405180910390f35b3480156101b857600080fd5b506101d360048036038101906101ce919061118f565b6106b7565b6040516101e0919061114a565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b91906111e2565b610947565b60405161021d919061126e565b60405180910390f35b34801561023257600080fd5b5061023b610a27565b60405161024891906112a5565b60405180910390f35b34801561025d57600080fd5b50610266610a3a565b6040516102739190611174565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190611310565b610a40565b005b3480156102b157600080fd5b506102cc60048036038101906102c7919061133d565b610a84565b6040516102d99190611174565b60405180910390f35b3480156102ee57600080fd5b506102f7610acd565b6040516103049190611025565b60405180910390f35b34801561031957600080fd5b50610334600480360381019061032f919061136a565b610b5b565b6040516103419190611174565b60405180910390f35b34801561035657600080fd5b50610371600480360381019061036c91906110ef565b610b7e565b60405161037e919061114a565b60405180910390f35b34801561039357600080fd5b506103ae60048036038101906103a9919061136a565b610d07565b6040516103bb9190611174565b60405180910390f35b3480156103d057600080fd5b506103eb60048036038101906103e691906114df565b610d29565b6040516103f8919061114a565b60405180910390f35b34801561040d57600080fd5b506104286004803603810190610423919061136a565b610e8d565b6040516104359190611174565b60405180910390f35b34801561044a57600080fd5b506104656004803603810190610460919061154e565b610ec5565b6040516104729190611174565b60405180910390f35b34801561048757600080fd5b50610490610f4c565b60405161049d91906115af565b60405180910390f35b3480156104b257600080fd5b506104cd60048036038101906104c8919061136a565b610f72565b6040516104da9190611174565b60405180910390f35b600180546104f0906115f9565b80601f016020809104026020016040519081016040528092919081815260200182805461051c906115f9565b80156105695780601f1061053e57610100808354040283529160200191610569565b820191906000526020600020905b81548152906001019060200180831161054c57829003601f168201915b505050505081565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106519190611174565b60405180910390a36001905092915050565b6000600560008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546003546106b29190611659565b905090565b6000610702600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b5b565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107cb600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b5b565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610894600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610f72565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109349190611174565b60405180910390a3600190509392505050565b6000816003600082825461095b919061168d565b92505081905550600354600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507370997970c51812dc3a010c7d01b50e0d17dc79c873ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a1a9190611174565b60405180910390a3919050565b600260009054906101000a900460ff1681565b60035481565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054610ada906115f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b06906115f9565b8015610b535780601f10610b2857610100808354040283529160200191610b53565b820191906000526020600020905b815481529060010190602001808311610b3657829003601f168201915b505050505081565b600082821115610b6a57600080fd5b8183610b769190611659565b905092915050565b6000610bc9600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b5b565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c55600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610f72565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf59190611174565b60405180910390a36001905092915050565b6000808211610d1557600080fd5b8183610d2191906116f0565b905092915050565b600082600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610e099190611174565b60405180910390a38373ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338530866040518563ffffffff1660e01b8152600401610e509493929190611785565b600060405180830381600087803b158015610e6a57600080fd5b505af1158015610e7e573d6000803e3d6000fd5b50505050600190509392505050565b60008183610e9b91906117d1565b90506000831480610eb65750818382610eb491906116f0565b145b610ebf57600080fd5b92915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008183610f80919061168d565b905082811015610f8f57600080fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fcf578082015181840152602081019050610fb4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ff782610f95565b6110018185610fa0565b9350611011818560208601610fb1565b61101a81610fdb565b840191505092915050565b6000602082019050818103600083015261103f8184610fec565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110868261105b565b9050919050565b6110968161107b565b81146110a157600080fd5b50565b6000813590506110b38161108d565b92915050565b6000819050919050565b6110cc816110b9565b81146110d757600080fd5b50565b6000813590506110e9816110c3565b92915050565b6000806040838503121561110657611105611051565b5b6000611114858286016110a4565b9250506020611125858286016110da565b9150509250929050565b60008115159050919050565b6111448161112f565b82525050565b600060208201905061115f600083018461113b565b92915050565b61116e816110b9565b82525050565b60006020820190506111896000830184611165565b92915050565b6000806000606084860312156111a8576111a7611051565b5b60006111b6868287016110a4565b93505060206111c7868287016110a4565b92505060406111d8868287016110da565b9150509250925092565b6000602082840312156111f8576111f7611051565b5b6000611206848285016110da565b91505092915050565b6000819050919050565b600061123461122f61122a8461105b565b61120f565b61105b565b9050919050565b600061124682611219565b9050919050565b60006112588261123b565b9050919050565b6112688161124d565b82525050565b6000602082019050611283600083018461125f565b92915050565b600060ff82169050919050565b61129f81611289565b82525050565b60006020820190506112ba6000830184611296565b92915050565b60006112cb8261105b565b9050919050565b60006112dd826112c0565b9050919050565b6112ed816112d2565b81146112f857600080fd5b50565b60008135905061130a816112e4565b92915050565b60006020828403121561132657611325611051565b5b6000611334848285016112fb565b91505092915050565b60006020828403121561135357611352611051565b5b6000611361848285016110a4565b91505092915050565b6000806040838503121561138157611380611051565b5b600061138f858286016110da565b92505060206113a0858286016110da565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113ec82610fdb565b810181811067ffffffffffffffff8211171561140b5761140a6113b4565b5b80604052505050565b600061141e611047565b905061142a82826113e3565b919050565b600067ffffffffffffffff82111561144a576114496113b4565b5b61145382610fdb565b9050602081019050919050565b82818337600083830152505050565b600061148261147d8461142f565b611414565b90508281526020810184848401111561149e5761149d6113af565b5b6114a9848285611460565b509392505050565b600082601f8301126114c6576114c56113aa565b5b81356114d684826020860161146f565b91505092915050565b6000806000606084860312156114f8576114f7611051565b5b6000611506868287016110a4565b9350506020611517868287016110da565b925050604084013567ffffffffffffffff81111561153857611537611056565b5b611544868287016114b1565b9150509250925092565b6000806040838503121561156557611564611051565b5b6000611573858286016110a4565b9250506020611584858286016110a4565b9150509250929050565b60006115998261123b565b9050919050565b6115a98161158e565b82525050565b60006020820190506115c460008301846115a0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061161157607f821691505b602082108103611624576116236115ca565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611664826110b9565b915061166f836110b9565b92508282039050818111156116875761168661162a565b5b92915050565b6000611698826110b9565b91506116a3836110b9565b92508282019050808211156116bb576116ba61162a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006116fb826110b9565b9150611706836110b9565b925082611716576117156116c1565b5b828204905092915050565b61172a8161107b565b82525050565b600081519050919050565b600082825260208201905092915050565b600061175782611730565b611761818561173b565b9350611771818560208601610fb1565b61177a81610fdb565b840191505092915050565b600060808201905061179a6000830187611721565b6117a76020830186611165565b6117b46040830185611721565b81810360608301526117c6818461174c565b905095945050505050565b60006117dc826110b9565b91506117e7836110b9565b92508282026117f5816110b9565b9150828204841483151761180c5761180b61162a565b5b509291505056fea26469706673582212209ce1251a312c050cc903fd4460000ee1b5f0a6f85667c9d6c023d48dc15c728864736f6c63430008110033";

type BitBlockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitBlockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitBlockToken__factory extends ContractFactory {
  constructor(...args: BitBlockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BitBlockToken> {
    return super.deploy(overrides || {}) as Promise<BitBlockToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BitBlockToken {
    return super.attach(address) as BitBlockToken;
  }
  override connect(signer: Signer): BitBlockToken__factory {
    return super.connect(signer) as BitBlockToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitBlockTokenInterface {
    return new utils.Interface(_abi) as BitBlockTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitBlockToken {
    return new Contract(address, _abi, signerOrProvider) as BitBlockToken;
  }
}
