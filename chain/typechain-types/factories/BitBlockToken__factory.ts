/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BitBlockToken, BitBlockTokenInterface } from "../BitBlockToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "approveAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "createToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeMul",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeSub",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600381526020017f4242540000000000000000000000000000000000000000000000000000000000815250600090816200004a91906200033b565b506040518060400160405280600d81526020017f426974426c6f636b546f6b656e00000000000000000000000000000000000000815250600190816200009191906200033b565b5060028060006101000a81548160ff021916908360ff160217905550348015620000ba57600080fd5b5062000422565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014357607f821691505b602082108103620001595762000158620000fb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000184565b620001cf868362000184565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200021c620002166200021084620001e7565b620001f1565b620001e7565b9050919050565b6000819050919050565b6200023883620001fb565b62000250620002478262000223565b84845462000191565b825550505050565b600090565b6200026762000258565b620002748184846200022d565b505050565b5b818110156200029c57620002906000826200025d565b6001810190506200027a565b5050565b601f821115620002eb57620002b5816200015f565b620002c08462000174565b81016020851015620002d0578190505b620002e8620002df8562000174565b83018262000279565b50505b505050565b600082821c905092915050565b60006200031060001984600802620002f0565b1980831691505092915050565b60006200032b8383620002fd565b9150826002028217905092915050565b6200034682620000c1565b67ffffffffffffffff811115620003625762000361620000cc565b5b6200036e82546200012a565b6200037b828285620002a0565b600060209050601f831160018114620003b357600084156200039e578287015190505b620003aa85826200031d565b8655506200041a565b601f198416620003c3866200015f565b60005b82811015620003ed57848901518255600182019150602085019450602081019050620003c6565b868310156200040d578489015162000409601f891682620002fd565b8355505b6001600288020188555050505b505050505050565b6116fd80620004326000396000f3fe60806040526004361061010d5760003560e01c806370a0823111610095578063b5931f7c11610064578063b5931f7c146103c4578063cae9ca5114610401578063d05c78da1461043e578063dd62ed3e1461047b578063e6cb9013146104b857610114565b806370a08231146102e257806395d89b411461031f578063a293d1e81461034a578063a9059cbb1461038757610114565b806327e235e3116100dc57806327e235e3146101e95780632d571cc414610226578063313ce5671461024f5780633eaaf86b1461027a5780635c658165146102a557610114565b806306fdde0314610119578063095ea7b31461014457806318160ddd1461018157806323b872dd146101ac57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e6104f5565b60405161013b919061100c565b60405180910390f35b34801561015057600080fd5b5061016b600480360381019061016691906110d6565b610583565b6040516101789190611131565b60405180910390f35b34801561018d57600080fd5b50610196610675565b6040516101a3919061115b565b60405180910390f35b3480156101b857600080fd5b506101d360048036038101906101ce9190611176565b6106c9565b6040516101e09190611131565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b91906111c9565b610959565b60405161021d919061115b565b60405180910390f35b34801561023257600080fd5b5061024d600480360381019061024891906111f6565b610971565b005b34801561025b57600080fd5b50610264610a53565b604051610271919061123f565b60405180910390f35b34801561028657600080fd5b5061028f610a66565b60405161029c919061115b565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c7919061125a565b610a6c565b6040516102d9919061115b565b60405180910390f35b3480156102ee57600080fd5b50610309600480360381019061030491906111c9565b610a91565b604051610316919061115b565b60405180910390f35b34801561032b57600080fd5b50610334610ada565b604051610341919061100c565b60405180910390f35b34801561035657600080fd5b50610371600480360381019061036c919061129a565b610b68565b60405161037e919061115b565b60405180910390f35b34801561039357600080fd5b506103ae60048036038101906103a991906110d6565b610b8b565b6040516103bb9190611131565b60405180910390f35b3480156103d057600080fd5b506103eb60048036038101906103e6919061129a565b610d14565b6040516103f8919061115b565b60405180910390f35b34801561040d57600080fd5b506104286004803603810190610423919061140f565b610d36565b6040516104359190611131565b60405180910390f35b34801561044a57600080fd5b506104656004803603810190610460919061129a565b610e9a565b604051610472919061115b565b60405180910390f35b34801561048757600080fd5b506104a2600480360381019061049d919061125a565b610ed2565b6040516104af919061115b565b60405180910390f35b3480156104c457600080fd5b506104df60048036038101906104da919061129a565b610f59565b6040516104ec919061115b565b60405180910390f35b60018054610502906114ad565b80601f016020809104026020016040519081016040528092919081815260200182805461052e906114ad565b801561057b5780601f106105505761010080835404028352916020019161057b565b820191906000526020600020905b81548152906001019060200180831161055e57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610663919061115b565b60405180910390a36001905092915050565b6000600460008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546003546106c4919061150d565b905090565b6000610714600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b68565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107dd600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b68565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108a6600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610f59565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610946919061115b565b60405180910390a3600190509392505050565b60046020528060005260406000206000915090505481565b80600360008282546109839190611541565b92505081905550600354600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000733c44cdddb6a900fa2b585dd299e03d12fa4293bc90508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a47919061115b565b60405180910390a35050565b600260009054906101000a900460ff1681565b60035481565b6005602052816000526040600020602052806000526040600020600091509150505481565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054610ae7906114ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610b13906114ad565b8015610b605780601f10610b3557610100808354040283529160200191610b60565b820191906000526020600020905b815481529060010190602001808311610b4357829003601f168201915b505050505081565b600082821115610b7757600080fd5b8183610b83919061150d565b905092915050565b6000610bd6600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b68565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c62600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610f59565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d02919061115b565b60405180910390a36001905092915050565b6000808211610d2257600080fd5b8183610d2e91906115a4565b905092915050565b600082600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610e16919061115b565b60405180910390a38373ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338530866040518563ffffffff1660e01b8152600401610e5d9493929190611639565b600060405180830381600087803b158015610e7757600080fd5b505af1158015610e8b573d6000803e3d6000fd5b50505050600190509392505050565b60008183610ea89190611685565b90506000831480610ec35750818382610ec191906115a4565b145b610ecc57600080fd5b92915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610f679190611541565b905082811015610f7657600080fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fb6578082015181840152602081019050610f9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fde82610f7c565b610fe88185610f87565b9350610ff8818560208601610f98565b61100181610fc2565b840191505092915050565b600060208201905081810360008301526110268184610fd3565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061106d82611042565b9050919050565b61107d81611062565b811461108857600080fd5b50565b60008135905061109a81611074565b92915050565b6000819050919050565b6110b3816110a0565b81146110be57600080fd5b50565b6000813590506110d0816110aa565b92915050565b600080604083850312156110ed576110ec611038565b5b60006110fb8582860161108b565b925050602061110c858286016110c1565b9150509250929050565b60008115159050919050565b61112b81611116565b82525050565b60006020820190506111466000830184611122565b92915050565b611155816110a0565b82525050565b6000602082019050611170600083018461114c565b92915050565b60008060006060848603121561118f5761118e611038565b5b600061119d8682870161108b565b93505060206111ae8682870161108b565b92505060406111bf868287016110c1565b9150509250925092565b6000602082840312156111df576111de611038565b5b60006111ed8482850161108b565b91505092915050565b60006020828403121561120c5761120b611038565b5b600061121a848285016110c1565b91505092915050565b600060ff82169050919050565b61123981611223565b82525050565b60006020820190506112546000830184611230565b92915050565b6000806040838503121561127157611270611038565b5b600061127f8582860161108b565b92505060206112908582860161108b565b9150509250929050565b600080604083850312156112b1576112b0611038565b5b60006112bf858286016110c1565b92505060206112d0858286016110c1565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61131c82610fc2565b810181811067ffffffffffffffff8211171561133b5761133a6112e4565b5b80604052505050565b600061134e61102e565b905061135a8282611313565b919050565b600067ffffffffffffffff82111561137a576113796112e4565b5b61138382610fc2565b9050602081019050919050565b82818337600083830152505050565b60006113b26113ad8461135f565b611344565b9050828152602081018484840111156113ce576113cd6112df565b5b6113d9848285611390565b509392505050565b600082601f8301126113f6576113f56112da565b5b813561140684826020860161139f565b91505092915050565b60008060006060848603121561142857611427611038565b5b60006114368682870161108b565b9350506020611447868287016110c1565b925050604084013567ffffffffffffffff8111156114685761146761103d565b5b611474868287016113e1565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114c557607f821691505b6020821081036114d8576114d761147e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611518826110a0565b9150611523836110a0565b925082820390508181111561153b5761153a6114de565b5b92915050565b600061154c826110a0565b9150611557836110a0565b925082820190508082111561156f5761156e6114de565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006115af826110a0565b91506115ba836110a0565b9250826115ca576115c9611575565b5b828204905092915050565b6115de81611062565b82525050565b600081519050919050565b600082825260208201905092915050565b600061160b826115e4565b61161581856115ef565b9350611625818560208601610f98565b61162e81610fc2565b840191505092915050565b600060808201905061164e60008301876115d5565b61165b602083018661114c565b61166860408301856115d5565b818103606083015261167a8184611600565b905095945050505050565b6000611690826110a0565b915061169b836110a0565b92508282026116a9816110a0565b915082820484148315176116c0576116bf6114de565b5b509291505056fea2646970667358221220e108763e481a1284ae6ec61d24112fa67f3abeb42a0cd0cab973bf769be1c7f064736f6c63430008110033";

type BitBlockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitBlockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitBlockToken__factory extends ContractFactory {
  constructor(...args: BitBlockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BitBlockToken> {
    return super.deploy(overrides || {}) as Promise<BitBlockToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BitBlockToken {
    return super.attach(address) as BitBlockToken;
  }
  override connect(signer: Signer): BitBlockToken__factory {
    return super.connect(signer) as BitBlockToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitBlockTokenInterface {
    return new utils.Interface(_abi) as BitBlockTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitBlockToken {
    return new Contract(address, _abi, signerOrProvider) as BitBlockToken;
  }
}
