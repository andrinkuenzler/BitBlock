/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BitBlockToken, BitBlockTokenInterface } from "../BitBlockToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "approveAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "createToken",
    outputs: [
      {
        internalType: "contract BitBlockToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventContract",
    outputs: [
      {
        internalType: "contract EventContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeMul",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeSub",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract EventContract",
        name: "contract_",
        type: "address",
      },
    ],
    name: "setEventContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600381526020017f4242540000000000000000000000000000000000000000000000000000000000815250600090816200004a91906200033b565b506040518060400160405280600f81526020017f426974426c6f636b205469636b65740000000000000000000000000000000000815250600190816200009191906200033b565b5060028060006101000a81548160ff021916908360ff160217905550348015620000ba57600080fd5b5062000422565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014357607f821691505b602082108103620001595762000158620000fb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000184565b620001cf868362000184565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200021c620002166200021084620001e7565b620001f1565b620001e7565b9050919050565b6000819050919050565b6200023883620001fb565b62000250620002478262000223565b84845462000191565b825550505050565b600090565b6200026762000258565b620002748184846200022d565b505050565b5b818110156200029c57620002906000826200025d565b6001810190506200027a565b5050565b601f821115620002eb57620002b5816200015f565b620002c08462000174565b81016020851015620002d0578190505b620002e8620002df8562000174565b83018262000279565b50505b505050565b600082821c905092915050565b60006200031060001984600802620002f0565b1980831691505092915050565b60006200032b8383620002fd565b9150826002028217905092915050565b6200034682620000c1565b67ffffffffffffffff811115620003625762000361620000cc565b5b6200036e82546200012a565b6200037b828285620002a0565b600060209050601f831160018114620003b357600084156200039e578287015190505b620003aa85826200031d565b8655506200041a565b601f198416620003c3866200015f565b60005b82811015620003ed57848901518255600182019150602085019450602081019050620003c6565b868310156200040d578489015162000409601f891682620002fd565b8355505b6001600288020188555050505b505050505050565b61193f80620004326000396000f3fe60806040526004361061010d5760003560e01c806395d89b4111610095578063cae9ca5111610064578063cae9ca51146103c4578063d05c78da14610401578063dd62ed3e1461043e578063e274fd241461047b578063e6cb9013146104a657610114565b806395d89b41146102e2578063a293d1e81461030d578063a9059cbb1461034a578063b5931f7c1461038757610114565b80632d571cc4116100dc5780632d571cc4146101e9578063313ce567146102265780633eaaf86b14610251578063656f0f0f1461027c57806370a08231146102a557610114565b806306fdde0314610119578063095ea7b31461014457806318160ddd1461018157806323b872dd146101ac57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e6104e3565b60405161013b91906110d9565b60405180910390f35b34801561015057600080fd5b5061016b600480360381019061016691906111a3565b610571565b60405161017891906111fe565b60405180910390f35b34801561018d57600080fd5b50610196610663565b6040516101a39190611228565b60405180910390f35b3480156101b857600080fd5b506101d360048036038101906101ce9190611243565b6106b7565b6040516101e091906111fe565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b9190611296565b610947565b60405161021d9190611322565b60405180910390f35b34801561023257600080fd5b5061023b610adb565b6040516102489190611359565b60405180910390f35b34801561025d57600080fd5b50610266610aee565b6040516102739190611228565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e91906113c4565b610af4565b005b3480156102b157600080fd5b506102cc60048036038101906102c791906113f1565b610b38565b6040516102d99190611228565b60405180910390f35b3480156102ee57600080fd5b506102f7610b81565b60405161030491906110d9565b60405180910390f35b34801561031957600080fd5b50610334600480360381019061032f919061141e565b610c0f565b6040516103419190611228565b60405180910390f35b34801561035657600080fd5b50610371600480360381019061036c91906111a3565b610c32565b60405161037e91906111fe565b60405180910390f35b34801561039357600080fd5b506103ae60048036038101906103a9919061141e565b610dbb565b6040516103bb9190611228565b60405180910390f35b3480156103d057600080fd5b506103eb60048036038101906103e69190611593565b610ddd565b6040516103f891906111fe565b60405180910390f35b34801561040d57600080fd5b506104286004803603810190610423919061141e565b610f41565b6040516104359190611228565b60405180910390f35b34801561044a57600080fd5b5061046560048036038101906104609190611602565b610f79565b6040516104729190611228565b60405180910390f35b34801561048757600080fd5b50610490611000565b60405161049d9190611663565b60405180910390f35b3480156104b257600080fd5b506104cd60048036038101906104c8919061141e565b611026565b6040516104da9190611228565b60405180910390f35b600180546104f0906116ad565b80601f016020809104026020016040519081016040528092919081815260200182805461051c906116ad565b80156105695780601f1061053e57610100808354040283529160200191610569565b820191906000526020600020905b81548152906001019060200180831161054c57829003601f168201915b505050505081565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106519190611228565b60405180910390a36001905092915050565b6000600560008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546003546106b2919061170d565b905090565b6000610702600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610c0f565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107cb600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610c0f565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610894600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611026565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109349190611228565b60405180910390a3600190509392505050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109da9190611756565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a1157600080fd5b8160036000828254610a239190611783565b92505081905550600354600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ace9190611228565b60405180910390a3919050565b600260009054906101000a900460ff1681565b60035481565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008054610b8e906116ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610bba906116ad565b8015610c075780601f10610bdc57610100808354040283529160200191610c07565b820191906000526020600020905b815481529060010190602001808311610bea57829003601f168201915b505050505081565b600082821115610c1e57600080fd5b8183610c2a919061170d565b905092915050565b6000610c7d600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610c0f565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d09600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611026565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610da99190611228565b60405180910390a36001905092915050565b6000808211610dc957600080fd5b8183610dd591906117e6565b905092915050565b600082600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610ebd9190611228565b60405180910390a38373ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338530866040518563ffffffff1660e01b8152600401610f04949392919061187b565b600060405180830381600087803b158015610f1e57600080fd5b505af1158015610f32573d6000803e3d6000fd5b50505050600190509392505050565b60008183610f4f91906118c7565b90506000831480610f6a5750818382610f6891906117e6565b145b610f7357600080fd5b92915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081836110349190611783565b90508281101561104357600080fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611083578082015181840152602081019050611068565b60008484015250505050565b6000601f19601f8301169050919050565b60006110ab82611049565b6110b58185611054565b93506110c5818560208601611065565b6110ce8161108f565b840191505092915050565b600060208201905081810360008301526110f381846110a0565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061113a8261110f565b9050919050565b61114a8161112f565b811461115557600080fd5b50565b60008135905061116781611141565b92915050565b6000819050919050565b6111808161116d565b811461118b57600080fd5b50565b60008135905061119d81611177565b92915050565b600080604083850312156111ba576111b9611105565b5b60006111c885828601611158565b92505060206111d98582860161118e565b9150509250929050565b60008115159050919050565b6111f8816111e3565b82525050565b600060208201905061121360008301846111ef565b92915050565b6112228161116d565b82525050565b600060208201905061123d6000830184611219565b92915050565b60008060006060848603121561125c5761125b611105565b5b600061126a86828701611158565b935050602061127b86828701611158565b925050604061128c8682870161118e565b9150509250925092565b6000602082840312156112ac576112ab611105565b5b60006112ba8482850161118e565b91505092915050565b6000819050919050565b60006112e86112e36112de8461110f565b6112c3565b61110f565b9050919050565b60006112fa826112cd565b9050919050565b600061130c826112ef565b9050919050565b61131c81611301565b82525050565b60006020820190506113376000830184611313565b92915050565b600060ff82169050919050565b6113538161133d565b82525050565b600060208201905061136e600083018461134a565b92915050565b600061137f8261110f565b9050919050565b600061139182611374565b9050919050565b6113a181611386565b81146113ac57600080fd5b50565b6000813590506113be81611398565b92915050565b6000602082840312156113da576113d9611105565b5b60006113e8848285016113af565b91505092915050565b60006020828403121561140757611406611105565b5b600061141584828501611158565b91505092915050565b6000806040838503121561143557611434611105565b5b60006114438582860161118e565b92505060206114548582860161118e565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114a08261108f565b810181811067ffffffffffffffff821117156114bf576114be611468565b5b80604052505050565b60006114d26110fb565b90506114de8282611497565b919050565b600067ffffffffffffffff8211156114fe576114fd611468565b5b6115078261108f565b9050602081019050919050565b82818337600083830152505050565b6000611536611531846114e3565b6114c8565b90508281526020810184848401111561155257611551611463565b5b61155d848285611514565b509392505050565b600082601f83011261157a5761157961145e565b5b813561158a848260208601611523565b91505092915050565b6000806000606084860312156115ac576115ab611105565b5b60006115ba86828701611158565b93505060206115cb8682870161118e565b925050604084013567ffffffffffffffff8111156115ec576115eb61110a565b5b6115f886828701611565565b9150509250925092565b6000806040838503121561161957611618611105565b5b600061162785828601611158565b925050602061163885828601611158565b9150509250929050565b600061164d826112ef565b9050919050565b61165d81611642565b82525050565b60006020820190506116786000830184611654565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116c557607f821691505b6020821081036116d8576116d761167e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117188261116d565b91506117238361116d565b925082820390508181111561173b5761173a6116de565b5b92915050565b60008151905061175081611141565b92915050565b60006020828403121561176c5761176b611105565b5b600061177a84828501611741565b91505092915050565b600061178e8261116d565b91506117998361116d565b92508282019050808211156117b1576117b06116de565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117f18261116d565b91506117fc8361116d565b92508261180c5761180b6117b7565b5b828204905092915050565b6118208161112f565b82525050565b600081519050919050565b600082825260208201905092915050565b600061184d82611826565b6118578185611831565b9350611867818560208601611065565b6118708161108f565b840191505092915050565b60006080820190506118906000830187611817565b61189d6020830186611219565b6118aa6040830185611817565b81810360608301526118bc8184611842565b905095945050505050565b60006118d28261116d565b91506118dd8361116d565b92508282026118eb8161116d565b91508282048414831517611902576119016116de565b5b509291505056fea264697066735822122036cc9db3c4f8b25097e43243976af573deb05170fbb273745292cf5b95dbb98264736f6c63430008110033";

type BitBlockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitBlockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitBlockToken__factory extends ContractFactory {
  constructor(...args: BitBlockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BitBlockToken> {
    return super.deploy(overrides || {}) as Promise<BitBlockToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BitBlockToken {
    return super.attach(address) as BitBlockToken;
  }
  override connect(signer: Signer): BitBlockToken__factory {
    return super.connect(signer) as BitBlockToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitBlockTokenInterface {
    return new utils.Interface(_abi) as BitBlockTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitBlockToken {
    return new Contract(address, _abi, signerOrProvider) as BitBlockToken;
  }
}
