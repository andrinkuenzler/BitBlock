/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SafeMath, SafeMathInterface } from "../SafeMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeMul",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeSub",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103c5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063a293d1e814610051578063b5931f7c14610081578063d05c78da146100b1578063e6cb9013146100e1575b600080fd5b61006b600480360381019061006691906101ec565b610111565b604051610078919061023b565b60405180910390f35b61009b600480360381019061009691906101ec565b610134565b6040516100a8919061023b565b60405180910390f35b6100cb60048036038101906100c691906101ec565b610156565b6040516100d8919061023b565b60405180910390f35b6100fb60048036038101906100f691906101ec565b61018e565b604051610108919061023b565b60405180910390f35b60008282111561012057600080fd5b818361012c9190610285565b905092915050565b600080821161014257600080fd5b818361014e91906102e8565b905092915050565b600081836101649190610319565b9050600083148061017f575081838261017d91906102e8565b145b61018857600080fd5b92915050565b6000818361019c919061035b565b9050828110156101ab57600080fd5b92915050565b600080fd5b6000819050919050565b6101c9816101b6565b81146101d457600080fd5b50565b6000813590506101e6816101c0565b92915050565b60008060408385031215610203576102026101b1565b5b6000610211858286016101d7565b9250506020610222858286016101d7565b9150509250929050565b610235816101b6565b82525050565b6000602082019050610250600083018461022c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610290826101b6565b915061029b836101b6565b92508282039050818111156102b3576102b2610256565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006102f3826101b6565b91506102fe836101b6565b92508261030e5761030d6102b9565b5b828204905092915050565b6000610324826101b6565b915061032f836101b6565b925082820261033d816101b6565b9150828204841483151761035457610353610256565b5b5092915050565b6000610366826101b6565b9150610371836101b6565b925082820190508082111561038957610388610256565b5b9291505056fea264697066735822122053ad765befebe3112efef04baf683edfebbd333cd8ac6b89ec9c93e2e4efcc3064736f6c63430008110033";

type SafeMathConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeMath__factory extends ContractFactory {
  constructor(...args: SafeMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafeMath> {
    return super.deploy(overrides || {}) as Promise<SafeMath>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SafeMath {
    return super.attach(address) as SafeMath;
  }
  override connect(signer: Signer): SafeMath__factory {
    return super.connect(signer) as SafeMath__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeMathInterface {
    return new utils.Interface(_abi) as SafeMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeMath {
    return new Contract(address, _abi, signerOrProvider) as SafeMath;
  }
}
