/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EventContract,
  EventContractInterface,
} from "../../../contracts/EventContract.sol/EventContract";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "createEvent",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntry",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "returnTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611117806100206000396000f3fe60806040526004361061004e5760003560e01c80633ccfd60b1461005757806367dd74ca1461006e5780639e9580f61461008a578063da30bd1a146100a6578063dcd55f90146100c257610055565b3661005557005b005b34801561006357600080fd5b5061006c6100ed565b005b6100886004803603810190610083919061083a565b61021c565b005b6100a4600480360381019061009f91906109ad565b610310565b005b6100c060048036038101906100bb919061083a565b6104d3565b005b3480156100ce57600080fd5b506100d761069d565b6040516100e49190610a37565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461014757600080fd5b60001515600660149054906101000a900460ff1615151461016757600080fd5b6001600660146101000a81548160ff021916908315150217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400006002546003546004546101da9190610a81565b6101e49190610ab5565b6101ee9190610ab5565b9081150290604051600060405180830381858888f19350505050158015610219573d6000803e3d6000fd5b50565b670de0b6b3a7640000816002546102339190610ab5565b61023d9190610ab5565b34101561024957600080fd5b80600354101561025857600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102b5929190610b47565b6020604051808303816000875af11580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610b9c565b50806003546103079190610a81565b60038190555050565b6064670de0b6b3a764000082846103279190610ab5565b6103319190610ab5565b61033b9190610bf8565b34101561034757600080fd5b6305f5e1008360405160200161035d9190610c9a565b6040516020818303038152906040528051906020012060001c6103809190610cb1565b60008190555082600190816103959190610eee565b5081600281905550806003819055508060048190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073e7f1725e7734ce288f8367e1bb143e90bb3f0512600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632d571cc4826040518263ffffffff1660e01b815260040161049c9190610fc0565b600060405180830381600087803b1580156104b657600080fd5b505af11580156104ca573d6000803e3d6000fd5b50505050505050565b6000735fbdb2315678afecb367f032d93f642f64180aa39050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166365decc0b33846040518363ffffffff1660e01b8152600401610549929190610b47565b600060405180830381600087803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b50505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3383856040518463ffffffff1660e01b81526004016105da93929190610fdb565b6020604051808303816000875af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610b9c565b503373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400008460025461064f9190610ab5565b6106599190610ab5565b9081150290604051600060405180830381858888f19350505050158015610684573d6000803e3d6000fd5b50816003546106939190611012565b6003819055505050565b6000807390f79bf6eb2c4f870365e785982e1f101e93b9069050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166365decc0b3360016040518363ffffffff1660e01b8152600401610715929190611081565b600060405180830381600087803b15801561072f57600080fd5b505af1158015610743573d6000803e3d6000fd5b50505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd338360016040518463ffffffff1660e01b81526004016107a7939291906110aa565b6020604051808303816000875af11580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190610b9c565b91505090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61081781610804565b811461082257600080fd5b50565b6000813590506108348161080e565b92915050565b6000602082840312156108505761084f6107fa565b5b600061085e84828501610825565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108ba82610871565b810181811067ffffffffffffffff821117156108d9576108d8610882565b5b80604052505050565b60006108ec6107f0565b90506108f882826108b1565b919050565b600067ffffffffffffffff82111561091857610917610882565b5b61092182610871565b9050602081019050919050565b82818337600083830152505050565b600061095061094b846108fd565b6108e2565b90508281526020810184848401111561096c5761096b61086c565b5b61097784828561092e565b509392505050565b600082601f83011261099457610993610867565b5b81356109a484826020860161093d565b91505092915050565b6000806000606084860312156109c6576109c56107fa565b5b600084013567ffffffffffffffff8111156109e4576109e36107ff565b5b6109f08682870161097f565b9350506020610a0186828701610825565b9250506040610a1286828701610825565b9150509250925092565b60008115159050919050565b610a3181610a1c565b82525050565b6000602082019050610a4c6000830184610a28565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8c82610804565b9150610a9783610804565b9250828203905081811115610aaf57610aae610a52565b5b92915050565b6000610ac082610804565b9150610acb83610804565b9250828202610ad981610804565b91508282048414831517610af057610aef610a52565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2282610af7565b9050919050565b610b3281610b17565b82525050565b610b4181610804565b82525050565b6000604082019050610b5c6000830185610b29565b610b696020830184610b38565b9392505050565b610b7981610a1c565b8114610b8457600080fd5b50565b600081519050610b9681610b70565b92915050565b600060208284031215610bb257610bb16107fa565b5b6000610bc084828501610b87565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c0382610804565b9150610c0e83610804565b925082610c1e57610c1d610bc9565b5b828204905092915050565b600081519050919050565b600081905092915050565b60005b83811015610c5d578082015181840152602081019050610c42565b60008484015250505050565b6000610c7482610c29565b610c7e8185610c34565b9350610c8e818560208601610c3f565b80840191505092915050565b6000610ca68284610c69565b915081905092915050565b6000610cbc82610804565b9150610cc783610804565b925082610cd757610cd6610bc9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d2957607f821691505b602082108103610d3c57610d3b610ce2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610da47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610d67565b610dae8683610d67565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610deb610de6610de184610804565b610dc6565b610804565b9050919050565b6000819050919050565b610e0583610dd0565b610e19610e1182610df2565b848454610d74565b825550505050565b600090565b610e2e610e21565b610e39818484610dfc565b505050565b5b81811015610e5d57610e52600082610e26565b600181019050610e3f565b5050565b601f821115610ea257610e7381610d42565b610e7c84610d57565b81016020851015610e8b578190505b610e9f610e9785610d57565b830182610e3e565b50505b505050565b600082821c905092915050565b6000610ec560001984600802610ea7565b1980831691505092915050565b6000610ede8383610eb4565b9150826002028217905092915050565b610ef782610c29565b67ffffffffffffffff811115610f1057610f0f610882565b5b610f1a8254610d11565b610f25828285610e61565b600060209050601f831160018114610f585760008415610f46578287015190505b610f508582610ed2565b865550610fb8565b601f198416610f6686610d42565b60005b82811015610f8e57848901518255600182019150602085019450602081019050610f69565b86831015610fab5784890151610fa7601f891682610eb4565b8355505b6001600288020188555050505b505050505050565b6000602082019050610fd56000830184610b38565b92915050565b6000606082019050610ff06000830186610b29565b610ffd6020830185610b29565b61100a6040830184610b38565b949350505050565b600061101d82610804565b915061102883610804565b92508282019050808211156110405761103f610a52565b5b92915050565b6000819050919050565b600061106b61106661106184611046565b610dc6565b610804565b9050919050565b61107b81611050565b82525050565b60006040820190506110966000830185610b29565b6110a36020830184611072565b9392505050565b60006060820190506110bf6000830186610b29565b6110cc6020830185610b29565b6110d96040830184611072565b94935050505056fea2646970667358221220307273e391199b15a80f4d8a7f5c7f9cd72d7af37f48e34baf7fc8e605f5a8e664736f6c63430008110033";

type EventContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventContract__factory extends ContractFactory {
  constructor(...args: EventContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EventContract> {
    return super.deploy(overrides || {}) as Promise<EventContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EventContract {
    return super.attach(address) as EventContract;
  }
  override connect(signer: Signer): EventContract__factory {
    return super.connect(signer) as EventContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventContractInterface {
    return new utils.Interface(_abi) as EventContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EventContract {
    return new Contract(address, _abi, signerOrProvider) as EventContract;
  }
}
