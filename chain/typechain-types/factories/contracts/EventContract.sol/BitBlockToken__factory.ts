/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BitBlockToken,
  BitBlockTokenInterface,
} from "../../../contracts/EventContract.sol/BitBlockToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "createToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020017f426974426c6f636b546f6b656e000000000000000000000000000000000000008152506040518060400160405280600381526020017f424254000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000324565b508060049081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b611518806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b4114610226578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806339509351146101aa57806365decc0b146101da57806370a08231146101f6576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd146101405780632d571cc414610170578063313ce5671461018c575b600080fd5b6100dc6102d4565b6040516100e99190610d5c565b60405180910390f35b61010c60048036038101906101079190610e17565b610366565b6040516101199190610e72565b60405180910390f35b61012a610389565b6040516101379190610e9c565b60405180910390f35b61015a60048036038101906101559190610eb7565b610393565b6040516101679190610e72565b60405180910390f35b61018a60048036038101906101859190610f0a565b6103c2565b005b6101946103e9565b6040516101a19190610f53565b60405180910390f35b6101c460048036038101906101bf9190610e17565b6103f2565b6040516101d19190610e72565b60405180910390f35b6101f460048036038101906101ef9190610e17565b610429565b005b610210600480360381019061020b9190610f6e565b61049e565b60405161021d9190610e9c565b60405180910390f35b61022e6104e6565b60405161023b9190610d5c565b60405180910390f35b61025e60048036038101906102599190610e17565b610578565b60405161026b9190610e72565b60405180910390f35b61028e60048036038101906102899190610e17565b6105ef565b60405161029b9190610e72565b60405180910390f35b6102be60048036038101906102b99190610f9b565b610612565b6040516102cb9190610e9c565b60405180910390f35b6060600380546102e39061100a565b80601f016020809104026020016040519081016040528092919081815260200182805461030f9061100a565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600080610371610699565b905061037e8185856106a1565b600191505092915050565b6000600254905090565b60008061039e610699565b90506103ab85828561086a565b6103b68585856108f6565b60019150509392505050565b6000735fbdb2315678afecb367f032d93f642f64180aa390506103e58183610b6c565b5050565b60006012905090565b6000806103fd610699565b905061041e81858561040f8589610612565b610419919061106a565b6106a1565b600191505092915050565b6000735fbdb2315678afecb367f032d93f642f64180aa390508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047a57600080fd5b61049983828461048a8786610612565b610494919061106a565b6106a1565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104f59061100a565b80601f01602080910402602001604051908101604052809291908181526020018280546105219061100a565b801561056e5780601f106105435761010080835404028352916020019161056e565b820191906000526020600020905b81548152906001019060200180831161055157829003601f168201915b5050505050905090565b600080610583610699565b905060006105918286610612565b9050838110156105d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cd90611110565b60405180910390fd5b6105e382868684036106a1565b60019250505092915050565b6000806105fa610699565b90506106078185856108f6565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610710576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610707906111a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611234565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161085d9190610e9c565b60405180910390a3505050565b60006108768484610612565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108f057818110156108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d9906112a0565b60405180910390fd5b6108ef84848484036106a1565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c90611332565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cb906113c4565b60405180910390fd5b6109df838383610cc2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5c90611456565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b539190610e9c565b60405180910390a3610b66848484610cc7565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd2906114c2565b60405180910390fd5b610be760008383610cc2565b8060026000828254610bf9919061106a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610caa9190610e9c565b60405180910390a3610cbe60008383610cc7565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d06578082015181840152602081019050610ceb565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d2e82610ccc565b610d388185610cd7565b9350610d48818560208601610ce8565b610d5181610d12565b840191505092915050565b60006020820190508181036000830152610d768184610d23565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dae82610d83565b9050919050565b610dbe81610da3565b8114610dc957600080fd5b50565b600081359050610ddb81610db5565b92915050565b6000819050919050565b610df481610de1565b8114610dff57600080fd5b50565b600081359050610e1181610deb565b92915050565b60008060408385031215610e2e57610e2d610d7e565b5b6000610e3c85828601610dcc565b9250506020610e4d85828601610e02565b9150509250929050565b60008115159050919050565b610e6c81610e57565b82525050565b6000602082019050610e876000830184610e63565b92915050565b610e9681610de1565b82525050565b6000602082019050610eb16000830184610e8d565b92915050565b600080600060608486031215610ed057610ecf610d7e565b5b6000610ede86828701610dcc565b9350506020610eef86828701610dcc565b9250506040610f0086828701610e02565b9150509250925092565b600060208284031215610f2057610f1f610d7e565b5b6000610f2e84828501610e02565b91505092915050565b600060ff82169050919050565b610f4d81610f37565b82525050565b6000602082019050610f686000830184610f44565b92915050565b600060208284031215610f8457610f83610d7e565b5b6000610f9284828501610dcc565b91505092915050565b60008060408385031215610fb257610fb1610d7e565b5b6000610fc085828601610dcc565b9250506020610fd185828601610dcc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061102257607f821691505b60208210810361103557611034610fdb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061107582610de1565b915061108083610de1565b92508282019050808211156110985761109761103b565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006110fa602583610cd7565b91506111058261109e565b604082019050919050565b60006020820190508181036000830152611129816110ed565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061118c602483610cd7565b915061119782611130565b604082019050919050565b600060208201905081810360008301526111bb8161117f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061121e602283610cd7565b9150611229826111c2565b604082019050919050565b6000602082019050818103600083015261124d81611211565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061128a601d83610cd7565b915061129582611254565b602082019050919050565b600060208201905081810360008301526112b98161127d565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061131c602583610cd7565b9150611327826112c0565b604082019050919050565b6000602082019050818103600083015261134b8161130f565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006113ae602383610cd7565b91506113b982611352565b604082019050919050565b600060208201905081810360008301526113dd816113a1565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611440602683610cd7565b915061144b826113e4565b604082019050919050565b6000602082019050818103600083015261146f81611433565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006114ac601f83610cd7565b91506114b782611476565b602082019050919050565b600060208201905081810360008301526114db8161149f565b905091905056fea26469706673582212205653361cb76a2b77cfb235c20d06b65b72526eeebbc957f604fd4c473107690364736f6c63430008110033";

type BitBlockTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitBlockTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitBlockToken__factory extends ContractFactory {
  constructor(...args: BitBlockTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BitBlockToken> {
    return super.deploy(overrides || {}) as Promise<BitBlockToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BitBlockToken {
    return super.attach(address) as BitBlockToken;
  }
  override connect(signer: Signer): BitBlockToken__factory {
    return super.connect(signer) as BitBlockToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitBlockTokenInterface {
    return new utils.Interface(_abi) as BitBlockTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitBlockToken {
    return new Contract(address, _abi, signerOrProvider) as BitBlockToken;
  }
}
