Deployer Account
Account #0: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 (10000 ETH)
Private Key: 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80

EventContract Address
0x5FbDB2315678afecb367f032d93F642f64180aa3

BitBlockToken Address
0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512

Seller Account
Account #1: 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 (10000 ETH)
Private Key: 0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d

TokenHolder Account
Token Holder ist der EventContract Account: 0x5FbDB2315678afecb367f032d93F642f64180aa3

Buyer Account
Account #2: 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC (10000 ETH)
Private Key: 0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a

TokenDump Account
Account #3: 0x90F79bf6EB2c4f870365E785982E1f101E93b906 (10000 ETH)
Private Key: 0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6


Hinweise:
- Für Reset: hardhat mit Ctrl+C stoppen und im Browser beim Remix Fenster F5 drücken. Anschliessend Vorgehen erneut durcharbeiten
- Methoden des ERC20 Interface können hier nachgeschaut werden:
    https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol
- eventPrice wird im contract standardsmässig als wei berechnet, manuelle Umrechnung in ETH
- approveTransaction Funktion im BitBlockToken Contract ergänzt welche increaseAllowance macht. Kann ein security issue sein

Vorgehen:
1. npx hardhat node
2. Contract in Remix öffnen
3. Contract kompilieren
4. Hardhat als Environment auswählen
5. Mit Account#0 zuerst EventContract, dann BitBlockToken deployen
6. Mit Account#1 createEvent ausführen
    EventContract Account hat nun X BBT
7. Mit Account#2 buyTicket ausführen, dabei oben bei value den eventPrice (Ether) eingeben
    EventContract hat nun noch 5 BBT
    Buyer hat nun 1 BBT
8. Mit Account#2 getEntry ausführen
9. Mit Account#2 returnTicket ausführen
10. Mit Account#1 withdraw ausführen
    Balance des Contracts verringert sich